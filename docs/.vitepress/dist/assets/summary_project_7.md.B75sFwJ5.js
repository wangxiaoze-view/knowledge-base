import{_ as e,c as a,o,a3 as t}from"./chunks/framework.DflgEAq4.js";const _=JSON.parse('{"title":"背景","description":"","frontmatter":{},"headers":[],"relativePath":"summary/project/7.md","filePath":"summary/project/7.md"}'),r={name:"summary/project/7.md"},c=t('<h1 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>前端时间移动 APP 与 h5 的一个混合式开发项目中，遇到了一个比较搞笑的 bug；刚开始有点纳闷，后来静下心来才觉得这个问题有点可笑； h5 的项目采用的 vue3 + vant3 开发的，h5 页面的顶部<code>tabBar</code>结构为左中右，是对 vant 的二次封装；</p></div><h2 id="复盘" tabindex="-1">复盘 <a class="header-anchor" href="#复盘" aria-label="Permalink to &quot;复盘&quot;">​</a></h2><h3 id="是一个怎样的问题" tabindex="-1"><strong>是一个怎样的问题？</strong> <a class="header-anchor" href="#是一个怎样的问题" aria-label="Permalink to &quot;**是一个怎样的问题？**&quot;">​</a></h3><p>在开发项目中，因为是混合式开发， h5 会调用原生 app 的一些方法，例如文件上传，返回上级页面，跳转 app 页面等等；</p><p>一级页面为 h5 页面, 二级页面也是 h5 页面，在二级页面返回直接跳出，直接到了 app 原生页面首页；按理说这应该返回的是一级 h5 的页面；</p><h3 id="浏览器打开-h5-一级页面模拟-bug-复现" tabindex="-1"><strong>浏览器打开 h5 一级页面模拟 bug 复现</strong> <a class="header-anchor" href="#浏览器打开-h5-一级页面模拟-bug-复现" aria-label="Permalink to &quot;**浏览器打开 h5 一级页面模拟 bug 复现**&quot;">​</a></h3><p>采用<code>vue-router</code>中的<code>router.back()</code> 和 <code>router.go(page)</code>方法，均在浏览器中返回的是一级页面；但是在<code>app webview</code>中直接跳出。执行了俩次；</p><p>使用调试手段. <code>console日志 和 debugger</code> 都会发现执行了俩次；</p><h3 id="寻找问题来源" tabindex="-1"><strong>寻找问题来源</strong> <a class="header-anchor" href="#寻找问题来源" aria-label="Permalink to &quot;**寻找问题来源**&quot;">​</a></h3><p><img src="http://qiniu.wangxiaoze.wang/hexo-blog/vue-tabbar.svg" alt="效果图"></p><h3 id="解决方案" tabindex="-1"><strong>解决方案</strong> <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;**解决方案**&quot;">​</a></h3><p>这个问题确实是粗心造成的；不过这个 bug 的解决方案也很简单，既然知道了问题的来源，那么对于解决方案，无非以下俩点：</p><ul><li>方案一： 去掉子组件自带的 api 方法 和 导出的<code>emit</code></li><li>方案二： 那就是将<code>emit</code> 的 name 进行修改，不要修改和子组件一致的<code>event name</code>； 当然父组件的<code>event name</code> 要和 子组件的 <code>emit</code> 中的<code>event name</code>一致即可；</li></ul>',14),n=[c];function d(i,s,h,l,p,u){return o(),a("div",null,n)}const b=e(r,[["render",d]]);export{_ as __pageData,b as default};
