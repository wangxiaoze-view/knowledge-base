import{_ as e,c as o,o as a,a3 as c}from"./chunks/framework.DflgEAq4.js";const _=JSON.parse('{"title":"区别?","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"featured/project/2.md","filePath":"featured/project/2.md"}'),d={name:"featured/project/2.md"},i=c('<h1 id="区别" tabindex="-1">区别? <a class="header-anchor" href="#区别" aria-label="Permalink to &quot;区别?&quot;">​</a></h1><p>在使用<code>vite</code>之前，项目基本都是使用的<code>webpack</code>, 但是针对于<code>wite</code>和<code>webpack</code>的区别如下：</p><h2 id="开发模式" tabindex="-1">开发模式 <a class="header-anchor" href="#开发模式" aria-label="Permalink to &quot;开发模式&quot;">​</a></h2><ol><li><code>webpack</code> 在开发过程中，它首先需要完全构建整个项目，生成一个或多个 bundle，然后通过热模块替换（HMR）来更新变化的部分。</li><li><code>vite</code> Vite 使用原生 ES 模块和即时编译，允许在不完整构建的情况下直接加载源代码，提供更快的初始启动时间和按需编译。</li></ol><h2 id="启动速度" tabindex="-1">启动速度 <a class="header-anchor" href="#启动速度" aria-label="Permalink to &quot;启动速度&quot;">​</a></h2><ol><li><code>webpack</code>启动时是需要先编译整个项目，小型项目还好但是对于大型项目，编译时间会比较长;</li><li><code>vite</code> 是预构建和按需编译 但是在启动速度上优于<code>webpack</code>。</li></ol><h2 id="打包效率" tabindex="-1">打包效率 <a class="header-anchor" href="#打包效率" aria-label="Permalink to &quot;打包效率&quot;">​</a></h2><ol><li><code>webpack</code> 提供丰富的插件与加载器生态系统，可以处理复杂的构建需求，但是这也是缺点，因为需要更多的配置和依赖。一定程度上导致较长的打包时间</li><li><code>vite</code> 使用<code>esbuild</code>进行打包，<code>esbuild</code> 是一个快速、小巧的 JavaScript 构建工具，可以快速构建项目，并且可以支持 TypeScript、Vue、React 等。但是在对项目的高级优化与定制化方面没有<code>webpack</code>强大</li></ol><h2 id="底层实现" tabindex="-1">底层实现 <a class="header-anchor" href="#底层实现" aria-label="Permalink to &quot;底层实现&quot;">​</a></h2><ol><li><code>webpack</code> 基于<code>Nodejs</code>，打包速度限制与<code>js</code>单线程，对于大项目而言构建速度受其影响</li><li><code>vite</code> esbuild(go 语言开发) 基于<code>Go</code>语言，打包速度限制与<code>Go</code>多线程，对于大项目而言构建速度不受其影响</li></ol><h2 id="生态和成熟" tabindex="-1">生态和成熟 <a class="header-anchor" href="#生态和成熟" aria-label="Permalink to &quot;生态和成熟&quot;">​</a></h2><ol><li><code>webpack</code> 社区生态丰富，许多插件和 loader 已经开源 可用于复杂的场景</li><li><code>vite</code> 不如<code>webpack</code> 社区生态丰富，在特定的构建需求和定制化插件方面不如<code>webpack</code>完善</li></ol><h2 id="生产环境" tabindex="-1">生产环境 <a class="header-anchor" href="#生产环境" aria-label="Permalink to &quot;生产环境&quot;">​</a></h2><ol><li><code>webpack</code> 在生产环境中. 能够提供高度优化的输出, 如代码分割和压缩, 缓存, 模块热更新等.</li><li><code>vite</code> 在某些情况在需要安装额外的配置或者插件才能做到</li></ol>',14),l=[i];function t(r,h,n,s,p,b){return a(),o("div",null,l)}const k=e(d,[["render",t]]);export{_ as __pageData,k as default};
