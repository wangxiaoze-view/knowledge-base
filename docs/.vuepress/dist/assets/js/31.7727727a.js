(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{348:function(t,a,v){"use strict";v.r(a);var e=v(4),_=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("Badge",{attrs:{text:"项目Bug",type:"error",vertical:"middle"}}),t._v(" "),a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("前端时间移动 APP 与 h5 的一个混合式开发项目中，遇到了一个比较搞笑的 bug；刚开始有点纳闷，后来静下心来才觉得这个问题有点可笑；\nh5 的项目采用的 vue3 + vant3 开发的，h5 页面的顶部"),a("code",[t._v("tabBar")]),t._v("结构为左中右，是对 vant 的二次封装；")])]),t._v(" "),a("h2",{attrs:{id:"复盘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复盘"}},[t._v("#")]),t._v(" 复盘")]),t._v(" "),a("h3",{attrs:{id:"是一个怎样的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是一个怎样的问题"}},[t._v("#")]),t._v(" "),a("strong",[t._v("是一个怎样的问题？")])]),t._v(" "),a("p",[t._v("在开发项目中，因为是混合式开发， h5 会调用原生 app 的一些方法，例如文件上传，返回上级页面，跳转 app 页面等等；")]),t._v(" "),a("p",[t._v("一级页面为 h5 页面, 二级页面也是 h5 页面，在二级页面返回直接跳出，直接到了 app 原生页面首页；按理说这应该返回的是一级 h5 的页面；")]),t._v(" "),a("h3",{attrs:{id:"浏览器打开-h5-一级页面模拟-bug-复现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器打开-h5-一级页面模拟-bug-复现"}},[t._v("#")]),t._v(" "),a("strong",[t._v("浏览器打开 h5 一级页面模拟 bug 复现")])]),t._v(" "),a("p",[t._v("采用"),a("code",[t._v("vue-router")]),t._v("中的"),a("code",[t._v("router.back()")]),t._v(" 和 "),a("code",[t._v("router.go(page)")]),t._v("方法，均在浏览器中返回的是一级页面；但是在"),a("code",[t._v("app webview")]),t._v("中直接跳出。执行了俩次；")]),t._v(" "),a("p",[t._v("使用调试手段. "),a("code",[t._v("console日志 和 debugger")]),t._v(" 都会发现执行了俩次；")]),t._v(" "),a("h3",{attrs:{id:"寻找问题来源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寻找问题来源"}},[t._v("#")]),t._v(" "),a("strong",[t._v("寻找问题来源")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://qiniu.wangxiaoze.wang/hexo-blog/vue-tabbar.svg",alt:"效果图"}})]),t._v(" "),a("h3",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" "),a("strong",[t._v("解决方案")])]),t._v(" "),a("p",[t._v("这个问题确实是粗心造成的；不过这个 bug 的解决方案也很简单，既然知道了问题的来源，那么对于解决方案，无非以下俩点：")]),t._v(" "),a("ul",[a("li",[t._v("方案一： 去掉子组件自带的 api 方法 和 导出的"),a("code",[t._v("emit")])]),t._v(" "),a("li",[t._v("方案二： 那就是将"),a("code",[t._v("emit")]),t._v(" 的 name 进行修改，不要修改和子组件一致的"),a("code",[t._v("event name")]),t._v("； 当然父组件的"),a("code",[t._v("event name")]),t._v(" 要和 子组件的\n"),a("code",[t._v("emit")]),t._v(" 中的"),a("code",[t._v("event name")]),t._v("一致即可；")])])],1)}),[],!1,null,null,null);a.default=_.exports}}]);