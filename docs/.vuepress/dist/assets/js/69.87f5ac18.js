(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{385:function(t,s,a){"use strict";a.r(s);var e=a(4),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("关于"),s("code",[t._v("Three.js")]),t._v("的开发,这里总结一下"),s("code",[t._v("Three")]),t._v("的的使用;")]),t._v(" "),s("p",[t._v("关于"),s("code",[t._v("Three")]),t._v("的安装分为俩种: npm 和 cdn;")]),t._v(" "),s("h2",{attrs:{id:"npm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[t._v("#")]),t._v(" npm  "),s("Badge",{attrs:{text:"推荐使用",type:"error"}})],1),t._v(" "),s("p",[t._v("习惯了"),s("code",[t._v("vue")]),t._v("的开发模式, 再去切换其他的感觉怪怪的; 要我觉得我就喜欢"),s("code",[t._v("npm")]),t._v("包的开发模式;")]),t._v(" "),s("p",[t._v("对于大多数用户而已，从 npm 包注册表中心 安装并使用 构建工具 会是一个更推荐的方案。因为项目需要的依赖越多，就越有可能遇到静态托管无法轻易解决的问题。而使用构建工具，导入本地 JavaScript 文件和 npm 软件包将会是开箱即用的，无需导入映射（import maps）")]),t._v(" "),s("ol",[s("li",[t._v("你要先安装配置"),s("code",[t._v("node")]),t._v("环境")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("install")]),t._v("命令进行安装")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装命令")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--save")]),t._v(" three\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev vite\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("终端运行"),s("code",[t._v("vite")]),t._v("命令")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("npx vite\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[t._v("如果一切顺利，你会在终端中看到一个类似 "),s("a",{attrs:{href:"http://localhost:5173",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:5173"),s("OutboundLink")],1),t._v(" 的 URL，打开该 URL 就能看到你的网络应用程序啦！")])]),t._v(" "),s("li",[s("p",[t._v("如果想要构建部署那就和之前"),s("code",[t._v("vue")]),t._v("项目类似的 "),s("code",[t._v("npx vite build")])])])]),t._v(" "),s("h2",{attrs:{id:"cdn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cdn"}},[t._v("#")]),t._v(" cdn")]),t._v(" "),s("ol",[s("li",[t._v('我们在 main.js 中从 "three"（一个 npm 软件包）导入了代码，但网络浏览器并不知道这意味着什么。在 index.html 中，我们需要添加一个导入映射（import map）来定义从哪里获取软件包。将下面的代码放在 '),s("code",[t._v("<head></head>")]),t._v(" 标签内、样式（styles）之后。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"importmap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"imports"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的version要改为具体的版本")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"three"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://cdn.jsdelivr.net/npm/three@<version>/build/three.module.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"three/addons/"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://cdn.jsdelivr.net/npm/three@<version>/examples/jsm/"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("运行命令 "),s("code",[t._v("npx serve .")])])]),t._v(" "),s("li",[s("p",[t._v("如果一切顺利，你会在终端中看到一个类似 "),s("a",{attrs:{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:3000"),s("OutboundLink")],1),t._v(" 的 URL，打开该 URL 就能看到你的网络应用程序。")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);