(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{343:function(t,s,n){"use strict";n.r(s);var a=n(8),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("Badge",{attrs:{text:"项目Bug",type:"error",vertical:"middle"}}),t._v(" "),s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("普通的输入框，做一个搜索的功能，那么对于搜索，输入直接调用接口就好了， 为什么还要值得做记录总结呢？是因为，搜索查询并不是你想象中的直接调用接口就可以了；考虑的因素也是挺多的，例如，搜索优化，不对服务器造成并发影响；")]),t._v(" "),s("p",[t._v("间隔搜索等等，一般行为，为了不频繁请求接口，我们都会使用"),s("code",[t._v("节流函数")]),t._v("优化，或者失去焦点再去请求也是可以的；")]),t._v(" "),s("p",[t._v("但是对于及查及显示的功能原则，这是就不能使用失焦查询了；这里的功能例如： 地址查询等等；")]),t._v(" "),s("p",[t._v("那么输入查询也会出现另外的一个弊端， 那就是中文字符的影响，下面会说明 "),s("code",[t._v("bug")]),t._v(" 复现的过程和解决方案!")])]),t._v(" "),s("h2",{attrs:{id:"适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("ul",[s("li",[t._v("常见的搜索查询无非就那么几种，端与端的搜索也就是移动端与 pc 端；")]),t._v(" "),s("li",[t._v("如果是移动端仅仅需要处理的是频繁请求的问题；避免频繁请求造成的服务器的压力;")]),t._v(" "),s("li",[t._v("如果是 pc 端，就不是仅仅需要处理频繁请求的问题了； 并且你在 "),s("code",[t._v("input")]),t._v(" 的情况下还要处理另外一种情况，输入中文有中文字符的情况；")]),t._v(" "),s("li",[t._v("平常的搜索都是输入框， 按钮查询搜索;")])]),t._v(" "),s("h2",{attrs:{id:"问题分析复盘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题分析复盘"}},[t._v("#")]),t._v(" 问题分析复盘")]),t._v(" "),s("p",[t._v("在原有的功能上去选择化的维护与扩展；其中有关联单号，其实是个搜索查询功能, 查询输入的手机号关联的业主最新前三单的信息;")]),t._v(" "),s("p",[t._v("因为当时考虑用户搜索查询方便，特处理输入框的事件为 oninput, 这样直接输入查询内容，在处理频繁请求的基础上去请求数据；这样就可以随查随时显示了；")]),t._v(" "),s("p",[t._v("而不选择 onchange, onblur 是因为俩者都是失去焦点再去请求;")]),t._v(" "),s("p",[t._v("针对三者的区别，我做了一下总结：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("oninput")]),t._v(": 只要输入， 输入框由内容则会执行，但是这里要区分一个问题：")]),t._v(" "),s("li",[s("code",[t._v("onchange, onblur相同点")]),t._v(": 俩者都是失去焦点之后再出处理对应的逻辑；")]),t._v(" "),s("li",[s("code",[t._v("onchange, onblur不同点")]),t._v(": "),s("code",[t._v("oncahnge")]),t._v("是在输入的基础上才会执行，而"),s("code",[t._v("onblur")]),t._v("不论是否输入都会执行；")])]),t._v(" "),s("p",[s("strong",[t._v("但是："),s("code",[t._v("oninput")]),t._v("要做一个区别，就是 pc 有其他输入法的情况下是以正常执行的，输入框不会有输入的文字或者字母， 而 Windows 自带的输入法，在输入框切换中文再去输入的情况，会将输入的英文先显示在输入框中，那样就会出现输入一个字符就会去请求一次；这样的情况就可以造成接口返回异常或者错误信息;")])]),t._v(" "),s("h2",{attrs:{id:"效果预览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果预览"}},[t._v("#")]),t._v(" 效果预览")]),t._v(" "),s("blockquote",[s("p",[t._v("以下效果都是在 "),s("code",[t._v("windows")]),t._v("下的效果；")])]),t._v(" "),s("h3",{attrs:{id:"使用其他的输入法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用其他的输入法"}},[t._v("#")]),t._v(" 使用其他的输入法")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://qiniu.wangxiaoze.wang/hexo-blog/search_1.png",alt:"使用其他的输入法"}})]),t._v(" "),s("h3",{attrs:{id:"windows-自带的输入法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows-自带的输入法"}},[t._v("#")]),t._v(" windows 自带的输入法")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://qiniu.wangxiaoze.wang/hexo-blog/search_2.png",alt:"自带的输入法"}})]),t._v(" "),s("blockquote",[s("p",[t._v("windows 自带的输入法，在这样的情况下会走请求， 还是有特殊符号的情况，如果在这样的情况下后端可能会报错；")])]),t._v(" "),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),s("ul",[s("li",[t._v("将 "),s("code",[t._v("oninput")]),t._v(" 事件换成 "),s("code",[t._v("onchange, onblur")]),t._v(" 事件，只有当失去焦点的情况下才会去请求， 这样可能会造成功能疑惑问题；都输入了怎么不执行呢？怎么没有数据呢？怎么操作？")]),t._v(" "),s("li",[t._v("同样，继续使用 oninput 事件；不过在这基础上还要执行俩个事件 "),s("code",[t._v("compositionstart, compositionend")]),t._v(";")]),t._v(" "),s("li",[s("code",[t._v("compositionstart")]),t._v(" 开始新的输入合成时会触发， "),s("code",[t._v("compositionend")]),t._v(" 当文本段落的组成完成或取消时，"),s("code",[t._v("compositionend")]),t._v(" 事件将被触发 (具有特殊字符的触发，需要一系列键和其他输入，如语音识别或移动中的字词建议)。"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/compositionend_event",target:"_blank",rel:"noopener noreferrer"}},[t._v("compositionend"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/compositionstart_event",target:"_blank",rel:"noopener noreferrer"}},[t._v("compositionstart"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"实例代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例代码"}},[t._v("#")]),t._v(" 实例代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// isInput 判断的是是否合并结束， 默认结束")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" isInput "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ngetOrderDemo\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果合并结束完成则， 进行下一步的逻辑操作; 没有结束合并  不会执行;")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isInput"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\s|\\r|\\t|\\n")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...code there 执行对应的逻辑操作;")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyup"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compositionstart"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当执行如图二的情况下，说明还在合并，并没有结束")]),t._v("\n\t\tisInput "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compositionend"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行到这一步说明  合并结束， 当合并结束时，执行input")]),t._v("\n\t\tisInput "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);